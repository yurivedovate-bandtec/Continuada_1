/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bandtec.continuada_1;

import java.util.Random;


/**
 *
 * @author yuriv
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        pbDisco = new javax.swing.JProgressBar();
        pbCpu = new javax.swing.JProgressBar();
        pbMemoria = new javax.swing.JProgressBar();
        lblCpu = new javax.swing.JLabel();
        lblMemoria = new javax.swing.JLabel();
        lblDisco = new javax.swing.JLabel();
        lblMaxCpu = new javax.swing.JLabel();
        lblMaxDisco = new javax.swing.JLabel();
        lblMaxMemoria = new javax.swing.JLabel();
        lblMedCpu = new javax.swing.JLabel();
        lblMedDisco = new javax.swing.JLabel();
        lblMedMemoria = new javax.swing.JLabel();
        lblMinCpu = new javax.swing.JLabel();
        lblMinMemoria = new javax.swing.JLabel();
        lblMinDisco = new javax.swing.JLabel();
        btnMonitoramento = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitulo.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lblTitulo.setText("Monitoramento de Hardware");

        pbDisco.setStringPainted(true);

        pbCpu.setStringPainted(true);

        pbMemoria.setStringPainted(true);

        lblCpu.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCpu.setText("CPU");

        lblMemoria.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblMemoria.setText("Memoria");

        lblDisco.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblDisco.setText("Disco");

        btnMonitoramento.setBackground(new java.awt.Color(51, 51, 255));
        btnMonitoramento.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btnMonitoramento.setText("Monitorar Hardware");
        btnMonitoramento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonitoramentoActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnMonitoramento, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                    .addComponent(lblTitulo)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pbCpu, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCpu))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaxCpu)
                            .addComponent(lblMedCpu)
                            .addComponent(lblMinCpu)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblMemoria)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMaxMemoria))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(pbMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblMinMemoria)
                                .addComponent(lblMedMemoria))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pbDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDisco))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaxDisco)
                            .addComponent(lblMedDisco)
                            .addComponent(lblMinDisco)))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblTitulo)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(lblCpu))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMaxCpu)))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pbCpu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMedCpu))
                .addGap(15, 15, 15)
                .addComponent(lblMinCpu)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDisco)
                    .addComponent(lblMaxDisco))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pbDisco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMedDisco))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(lblMemoria)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(lblMinDisco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMaxMemoria)
                        .addGap(15, 15, 15)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pbMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMedMemoria))
                .addGap(15, 15, 15)
                .addComponent(lblMinMemoria)
                .addGap(60, 60, 60)
                .addComponent(btnMonitoramento, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Integer aleatorioMaxCpu = 48;
    Integer aleatorioMaxDisco = 75;
    Integer aleatorioMaxMemoria = 10;
    
    Integer valorMaxCpu = -1;
    Integer valorMedCpu = -1;
    Integer valorMinCpu = -1;
    
    Integer valorMaxDisco = -1;
    Integer valorMedDisco = -1;
    Integer valorMinDisco = -1;
    
    Integer valorMaxMemoria = -1;
    Integer valorMedMemoria = -1;
    Integer valorMinMemoria = -1;
    
    Random aleatorioCpu = new Random();
    Random aleatorioDisco = new Random();
    Random aleatorioMemoria = new Random();


    private void btnMonitoramentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonitoramentoActionPerformed
        
        Integer valorAleatorioCpu = aleatorioCpu.nextInt(aleatorioMaxCpu + 1);
        Integer valorAleatorioDisco = aleatorioCpu.nextInt(aleatorioMaxDisco + 1);
        Integer valorAleatorioMemoria = aleatorioCpu.nextInt(aleatorioMaxMemoria + 1);
        
        
        pbCpu.setValue(valorAleatorioCpu);
        pbDisco.setValue(valorAleatorioDisco);
        pbMemoria.setValue(valorAleatorioMemoria);
        
        
        if (valorMinCpu == -1) {
            lblMinCpu.setText(String.format("%d", valorAleatorioCpu) + "%");
            valorMinCpu = valorAleatorioCpu;
        }
        if (valorAleatorioCpu > valorMaxCpu) {
            valorMaxCpu = valorAleatorioCpu;
            lblMaxCpu.setText(String.format("%d", valorMaxCpu)  + "%");
        }
        if (valorAleatorioCpu < valorMinCpu) {
            valorMinCpu = valorAleatorioCpu;
            lblMinCpu.setText(String.format("%d", valorMinCpu) + "%");
        }
        valorMedCpu = (valorMaxCpu + valorMinCpu)/2;
        lblMedCpu.setText(String.format("%d", valorMedCpu) + "%");

        
        
        if (valorMinDisco == -1) {
            lblMinDisco.setText(String.format("%d", valorAleatorioDisco) + "%");
            valorMinDisco = valorAleatorioDisco;
        }
        if (valorAleatorioDisco > valorMaxDisco) {
            valorMaxDisco = valorAleatorioDisco;
            lblMaxDisco.setText(String.format("%d", valorMaxDisco) + "%");
        }
        if (valorAleatorioDisco < valorMinDisco) {
            valorMinDisco = valorAleatorioDisco;
            lblMinDisco.setText(String.format("%d", valorMinDisco) + "%");
        }
        valorMedDisco = (valorMaxDisco + valorMinDisco)/2;
        lblMedDisco.setText(String.format("%d", valorMedDisco) + "%");

        
        
        if (valorMinMemoria == -1) {
            lblMinMemoria.setText(String.format("%d", valorAleatorioMemoria) + "%");
            valorMinMemoria = valorAleatorioMemoria;
        }
        if (valorAleatorioMemoria > valorMaxMemoria) {
            valorMaxMemoria = valorAleatorioMemoria;
            lblMaxMemoria.setText(String.format("%d", valorMaxMemoria) + "%");
        }
        if (valorAleatorioMemoria < valorMinMemoria) {
            valorMinMemoria = valorAleatorioMemoria;
            lblMinMemoria.setText(String.format("%d", valorMinMemoria) + "%");
        }
        valorMedMemoria = (valorMaxMemoria + valorMinMemoria)/2;
        lblMedMemoria.setText(String.format("%d", valorMedMemoria) + "%");

        
        
    }//GEN-LAST:event_btnMonitoramentoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        valorMaxCpu = -1;
        valorMedCpu = -1;
        valorMinCpu = -1;
        lblMaxCpu.setText("");
        lblMedCpu.setText("");
        lblMinCpu.setText("");
        pbCpu.setValue(0);

        valorMaxDisco = -1;
        valorMedDisco = -1;
        valorMinDisco = -1;
        lblMaxDisco.setText("");
        lblMedDisco.setText("");
        lblMinDisco.setText("");
        pbDisco.setValue(0);
        
        valorMaxMemoria = -1;
        valorMedMemoria = -1;
        valorMinMemoria = -1;
        lblMaxMemoria.setText("");
        lblMedMemoria.setText("");
        lblMinMemoria.setText("");
        pbMemoria.setValue(0);
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMonitoramento;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblCpu;
    private javax.swing.JLabel lblDisco;
    private javax.swing.JLabel lblMaxCpu;
    private javax.swing.JLabel lblMaxDisco;
    private javax.swing.JLabel lblMaxMemoria;
    private javax.swing.JLabel lblMedCpu;
    private javax.swing.JLabel lblMedDisco;
    private javax.swing.JLabel lblMedMemoria;
    private javax.swing.JLabel lblMemoria;
    private javax.swing.JLabel lblMinCpu;
    private javax.swing.JLabel lblMinDisco;
    private javax.swing.JLabel lblMinMemoria;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JProgressBar pbCpu;
    private javax.swing.JProgressBar pbDisco;
    private javax.swing.JProgressBar pbMemoria;
    // End of variables declaration//GEN-END:variables
}
